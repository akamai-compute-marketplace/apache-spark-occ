---
# roles/post/tasks/sshkeys.yml
- name: get root password
  slurp:
    src: /etc/shadow
  run_once: true
  delegate_to: localhost
  register: shadow

- name: set root password
  set_fact:
    root_password: "{{ shadow['content'] | b64decode | regex_search('^root.+') }}"
  run_once: true
  delegate_to: localhost
  
- name: set root password on remote nodes
  lineinfile:
    path: /etc/shadow
    regexp: '^root.+'
    line: '{{ root_password }}'

- name: checking account keys
  stat:
    path: '{{ local_home}}/.ssh/authorized_keys'
  register: authorized_keys_file

# - name: adding account keys to sudo user
#   copy:
#     src: '{{ local_home }}/.ssh/authorized_keys'
#     dest: '{{ item.userdir }}/.ssh/authorized_keys'
#     mode: '0600'
#     owner: "{{ item.user }}"
#     group: "{{ item.user }}"
#   loop:
#     - { userdir: '/root', user: 'root' }
#     - { userdir: '/home/{{ sudo_username }}', user: '{{ sudo_username }}' }
#   when:
#     - authorized_keys_file.stat.exists
#     - authorized_keys_file.stat.size > 0

- name: adding account keys to sudo user
  ansible.posix.authorized_key:
    user: "{{ item.user }}"
    key: "{{ lookup('file', local_home + '/.ssh/authorized_keys') }}"
    state: present
  loop:
    - { user: 'root' }
    - { user: '{{ sudo_username }}' }
  when:
    - authorized_keys_file.stat.exists
    - authorized_keys_file.stat.size > 0

# - name: append spark public key to spark workers
#   ansible.posix.authorized_key:
#     user: root
#     state: present
#     key: "{{ lookup('file', '/root/.ssh/id_rsa_spark.pub') }}"
#   delegate_to: "{{ item }}"
#   loop: "{{ groups['spark_workers'] }}"

- name: remove ansible from authorized_keys
  lineinfile:
    dest: /root/.ssh/authorized_keys
    state: absent
    regexp: '^.+ansible$'

- name: remove ansible ssh keys
  file:
    path: '{{ item }}'
    state: absent
  run_once: true
  delegate_to: localhost
  loop:
    - '{{ ansible_env.HOME }}/.ssh/id_ansible_ed25519'
    - '{{ ansible_env.HOME }}/.ssh/id_ansible_ed25519.pub'